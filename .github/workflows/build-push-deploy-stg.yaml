name: Build-Push-Deploy Stg

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    - name: Checkout code to latest version
      uses: actions/checkout@master

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - name: Github actions cache node
      uses: actions/cache@v2
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: Publish to docker registry
      uses: elgohr/Publish-Docker-Github-Action@master
      env:
        MINIO_URL: ${{ secrets.MINIO_URL }}
        MINIO_ACCESS_KEY: ${{ secrets.MINIO_ACCESS_KEY }}
        MINIO_SECRET_KEY: ${{ secrets.MINIO_SECRET_KEY }}
        MINIO_ENV_PATH: staging
        BUILD_ENV: staging
      with:
        registry: ${{ secrets.DOCKER_REGISTRY }}
        name: backpackrid/akunify
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        dockerfile: ./Dockerfile
        buildargs: MINIO_URL, MINIO_ACCESS_KEY, MINIO_SECRET_KEY, MINIO_ENV_PATH, BUILD_ENV
        tags: "staging"

    - name: Copy file docker-compose.yml via ssh
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.STAGING_SSH_HOST }}
        username: ${{ secrets.STAGING_SSH_USERNAME }}
        password: ${{ secrets.STAGING_SSH_PASSWORD }}
        source: "docker-compose.yml"
        target: "/docker/akunify"
        use_insecure_cipher: true

    - name: Executing remote ssh commands
      uses: appleboy/ssh-action@master
      env:
        MINIO_URL: ${{ secrets.MINIO_URL }}
        MINIO_ACCESS_KEY: ${{ secrets.MINIO_ACCESS_KEY }}
        MINIO_SECRET_KEY: ${{ secrets.MINIO_SECRET_KEY }}
        MINIO_ENV_PATH: staging
        DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
        DOCKER_REPOSITORY: backpackrid/akunify
        DOCKER_REPOSITORY_TAG: staging
        COMPOSE_PROJECT_NAME: staging
      with:
        host: ${{ secrets.STAGING_SSH_HOST }}
        username: ${{ secrets.STAGING_SSH_USERNAME }}
        password: ${{ secrets.STAGING_SSH_PASSWORD }}
        envs: MINIO_URL, MINIO_ACCESS_KEY, MINIO_SECRET_KEY, MINIO_ENV_PATH, DOCKER_REGISTRY, DOCKER_REPOSITORY, DOCKER_REPOSITORY_TAG, COMPOSE_PROJECT_NAME
        script: |
          cd /docker/akunify
          mc config host add minio $MINIO_URL $MINIO_ACCESS_KEY $MINIO_SECRET_KEY --api S3v4 && \
          mc cp -r minio/params/akunify/$MINIO_ENV_PATH/.env .
          docker pull $DOCKER_REGISTRY/$DOCKER_REPOSITORY:$DOCKER_REPOSITORY_TAG
          docker-compose -p $COMPOSE_PROJECT_NAME up -d
          docker image prune -f